// Generated by view binder compiler. Do not edit!
package com.example.cockmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cockmate.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPostBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button getImage;

  @NonNull
  public final MaterialToolbar postBar;

  @NonNull
  public final EditText postContent;

  @NonNull
  public final EditText postTitle;

  @NonNull
  public final RecyclerView recyclerView;

  private ActivityPostBinding(@NonNull LinearLayout rootView, @NonNull Button getImage,
      @NonNull MaterialToolbar postBar, @NonNull EditText postContent, @NonNull EditText postTitle,
      @NonNull RecyclerView recyclerView) {
    this.rootView = rootView;
    this.getImage = getImage;
    this.postBar = postBar;
    this.postContent = postContent;
    this.postTitle = postTitle;
    this.recyclerView = recyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.getImage;
      Button getImage = ViewBindings.findChildViewById(rootView, id);
      if (getImage == null) {
        break missingId;
      }

      id = R.id.post_bar;
      MaterialToolbar postBar = ViewBindings.findChildViewById(rootView, id);
      if (postBar == null) {
        break missingId;
      }

      id = R.id.post_content;
      EditText postContent = ViewBindings.findChildViewById(rootView, id);
      if (postContent == null) {
        break missingId;
      }

      id = R.id.post_title;
      EditText postTitle = ViewBindings.findChildViewById(rootView, id);
      if (postTitle == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      return new ActivityPostBinding((LinearLayout) rootView, getImage, postBar, postContent,
          postTitle, recyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
