// Generated by view binder compiler. Do not edit!
package com.example.cockmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cockmate.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView joinText;

  @NonNull
  public final MaterialToolbar loginBar;

  @NonNull
  public final Button loginBtn;

  @NonNull
  public final EditText mUserEmail;

  @NonNull
  public final EditText mUserPassword;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull TextView joinText,
      @NonNull MaterialToolbar loginBar, @NonNull Button loginBtn, @NonNull EditText mUserEmail,
      @NonNull EditText mUserPassword) {
    this.rootView = rootView;
    this.joinText = joinText;
    this.loginBar = loginBar;
    this.loginBtn = loginBtn;
    this.mUserEmail = mUserEmail;
    this.mUserPassword = mUserPassword;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.join_text;
      TextView joinText = ViewBindings.findChildViewById(rootView, id);
      if (joinText == null) {
        break missingId;
      }

      id = R.id.login_bar;
      MaterialToolbar loginBar = ViewBindings.findChildViewById(rootView, id);
      if (loginBar == null) {
        break missingId;
      }

      id = R.id.login_btn;
      Button loginBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.m_user_email;
      EditText mUserEmail = ViewBindings.findChildViewById(rootView, id);
      if (mUserEmail == null) {
        break missingId;
      }

      id = R.id.m_user_password;
      EditText mUserPassword = ViewBindings.findChildViewById(rootView, id);
      if (mUserPassword == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, joinText, loginBar, loginBtn,
          mUserEmail, mUserPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
